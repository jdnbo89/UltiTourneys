// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UltiTourneysApp.Data;

#nullable disable

namespace UltiTourneysApp.Migrations
{
    [DbContext(typeof(UltiTourneysDBContext))]
    [Migration("20230723191509_CapitalizeColumnNames")]
    partial class CapitalizeColumnNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("UltiTourneysApp.Classes.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamScore1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamScore2")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Player", b =>
                {
                    b.Property<int>("PlayerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerID");

                    b.HasIndex("TeamID");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Division")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TournamentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TeamID");

                    b.HasIndex("TournamentID");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Tournament", b =>
                {
                    b.Property<int>("TournamentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.HasKey("TournamentID");

                    b.ToTable("Tournament");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Player", b =>
                {
                    b.HasOne("UltiTourneysApp.Classes.Team", null)
                        .WithMany("Roster")
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Team", b =>
                {
                    b.HasOne("UltiTourneysApp.Classes.Tournament", null)
                        .WithMany("Teams")
                        .HasForeignKey("TournamentID");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Team", b =>
                {
                    b.Navigation("Roster");
                });

            modelBuilder.Entity("UltiTourneysApp.Classes.Tournament", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
